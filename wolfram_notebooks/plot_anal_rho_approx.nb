(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    105526,       2075]
NotebookOptionsPosition[    104837,       2056]
NotebookOutlinePosition[    105241,       2072]
CellTagsIndexPosition[    105198,       2069]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Define", " ", "constants"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c", "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"p", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plj", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t0", "=", 
   RowBox[{"10", "^", 
    RowBox[{"-", "1"}]}]}], ";", 
  RowBox[{"(*", "0.1", "*)"}], 
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "rho", " ", "function"}], "*)"}], 
  RowBox[{
   RowBox[{"rho", "[", 
    RowBox[{"t_", ",", "C1_", ",", "C2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", "*", "t"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"2", "/", "3"}], ")"}]}]}]}], ")"}], "*", "c"}], ")"}], 
     "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"C1", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "/", "t0"}], ")"}], "^", "2"}]}], "]"}]}], "*", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"c", "^", "4"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"C2", "+", 
         RowBox[{"C1", "*", "t", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "/", "5"}], ")"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"p", "*", "t"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"2", "/", "3"}], ")"}]}]}]}], ")"}]}]}], ")"}], "^", 
       "2"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rho", "[", 
     RowBox[{"t_", ",", "C1_", ",", "C2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"c", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"plj", "*", "t"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "3"}], ")"}]}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"plj", "*", "t"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "3"}], ")"}]}], "*", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"plj", "*", "t"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "3"}], ")"}]}], "]"}]}]}], ")"}], "/", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"C1", "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"t", "/", "t0"}], ")"}], "^", "2"}]}], "]"}]}]}], ")"}], 
     "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"c", "^", "4"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"C2", "+", 
          RowBox[{"C1", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"plj", "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"plj", "*", "t"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "3"}], ")"}]}], "]"}], "*", 
                 RowBox[{"t", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "3"}], ")"}]}]}], "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", "plj", ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", "/", "3"}], ")"}]}], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"plj", "*", "t"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "3"}], ")"}]}], "]"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"plj", "^", "2"}], ")"}], "*", 
                 RowBox[{"Sin", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"plj", "*", "t"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "3"}], ")"}]}], "]"}], "*", 
                 RowBox[{"t", "^", 
                  RowBox[{"(", 
                   RowBox[{"1", "/", "3"}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"p", "^", 
                  RowBox[{"(", 
                   RowBox[{"5", "/", "3"}], ")"}]}], "*", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"plj", "*", "t"}], ")"}], "^", 
                   RowBox[{"(", 
                    RowBox[{"1", "/", "3"}], ")"}]}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}], "^", "2"}]}], "]"}]}]}], ";"}], "\n", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Define", " ", "drho"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drho", "[", 
    RowBox[{
     RowBox[{"t_", "?", "NumericQ"}], ",", 
     RowBox[{"C1_", "?", "NumericQ"}], ",", 
     RowBox[{"C2_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"rho", "[", 
         RowBox[{"x", ",", "C1", ",", "C2"}], "]"}], ",", "x"}], "]"}], "]"}],
      "/.", " ", 
     RowBox[{"x", "->", "t"}]}], "//", "N"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"C1List", "=", 
   RowBox[{"{", 
    RowBox[{"0.5", ",", "1", ",", "2", ",", "4"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"C2List", "=", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "1", ",", "2", ",", "4"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Define", " ", "the", " ", "range", " ", "and", " ", "step", " ", "for", 
    " ", "t"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tList", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"t0", ",", "9", ",", "0.01"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Compute", " ", "rho", 
    RowBox[{"(", "t", ")"}], " ", "data", " ", "for", " ", "each", " ", 
    "pair", " ", "of", " ", "C1", " ", "and", " ", "C2"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataRho", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"rho", "[", 
           RowBox[{"t", ",", 
            RowBox[{"C1List", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"C2List", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tList"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "C1List", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Compute", " ", 
    RowBox[{"drho", "/", "rho"}], " ", "data", " ", "for", " ", "each", " ", 
    "pair", " ", "of", " ", "C1", " ", "and", " ", "C2"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dataDrhoOverRho", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"valRho", ",", "valDrho", ",", "ratio"}], "}"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"valRho", "=", 
            RowBox[{"rho", "[", 
             RowBox[{"t", ",", 
              RowBox[{"C1List", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"C2List", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"valDrho", "=", 
            RowBox[{"drho", "[", 
             RowBox[{"t", ",", 
              RowBox[{"C1List", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"C2List", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ratio", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"valRho", "!=", "0"}], ",", 
              RowBox[{"valDrho", "/", "valRho"}], ",", "Indeterminate"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"t", ",", "ratio"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tList"}], "}"}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "C1List", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "a", " ", "few", " ", "sample", " ", "points", " ", "to", 
    " ", "ensure", " ", 
    RowBox[{"they", "'"}], "re", " ", "not", " ", "empty", " ", "or", " ", 
    "indeterminate"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Sample (C1,C2) = (0.5,0.5): \>\"", ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"dataDrhoOverRho", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "5"}], "]"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"labels", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"\"\<C1=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"C1List", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\<, C2=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{"C2List", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "C1List", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "rho", 
    RowBox[{"(", "t", ")"}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rhoPlot", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"dataRho", ",", 
      RowBox[{"PlotLegends", "->", "labels"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<t\>\"", ",", "\"\<\[Rho](t)\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Plot of \[Rho](t) for Different C1 and C2 Values\>\""}], ",", 
      RowBox[{"PlotStyle", "->", "Thick"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ScalingFunctions", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<Linear\>\"", ",", "\"\<Log\>\""}], "}"}]}]}], "]"}]}], 
   ";"}], "\n", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", " ", 
    RowBox[{"(", 
     RowBox[{"d", "\\r", 
      RowBox[{"ho", "/", "\\r"}], "ho"}], ")"}], 
    RowBox[{"(", "t", ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drhoOverRhoPlot", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"dataDrhoOverRho", ",", 
      RowBox[{"PlotLegends", "->", "labels"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<t\>\"", ",", "\"\<d\[Rho]/\[Rho]\>\""}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "->", 
       "\"\<Plot of d\[Rho]/\[Rho] for Different C1 and C2 Values\>\""}], ",", 
      RowBox[{"PlotStyle", "->", "Thick"}], ",", 
      RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", "rhoPlot", "\n", "drhoOverRhoPlot", "\n"}], \
"Input",
 CellChangeTimes->{{3.943073307268292*^9, 3.9430733072731433`*^9}, 
   3.9430733731231794`*^9, {3.943073472852232*^9, 3.9430734989769807`*^9}, {
   3.943073576022169*^9, 3.9430735875990047`*^9}, {3.9430736365413785`*^9, 
   3.943073733321024*^9}, {3.9460329217210517`*^9, 3.9460329759251995`*^9}, {
   3.9460333395140924`*^9, 3.9460333398319006`*^9}, {3.9460333933915057`*^9, 
   3.9460333968335752`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"3fd7a05b-9eda-43e2-9419-26510b21d3c5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Sample (C1,C2) = (0.5,0.5): \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1`", ",", 
       RowBox[{"-", "8.603339843739402`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.11`", ",", 
       RowBox[{"-", "7.818391487669873`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.12000000000000001`", ",", 
       RowBox[{"-", "7.169698109642489`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.13`", ",", 
       RowBox[{"-", "6.6251575892964985`"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.14`", ",", 
       RowBox[{"-", "6.161959469859815`"}]}], "}"}]}], "}"}]}],
  SequenceForm[
  "Sample (C1,C2) = (0.5,0.5): ", {{0.1, -8.603339843739402}, {
   0.11, -7.818391487669873}, {0.12000000000000001`, -7.169698109642489}, {
   0.13, -6.6251575892964985`}, {0.14, -6.161959469859815}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9430733096137896`*^9, 3.943073374872526*^9, {3.9430734866562185`*^9, 
   3.943073500818734*^9}, {3.943073589061508*^9, 3.943073606933384*^9}, {
   3.9430736718993177`*^9, 3.9430737354808273`*^9}, {3.9460329279681664`*^9, 
   3.94603296505402*^9}, 3.9460333432309856`*^9, 3.9460333989948287`*^9},
 CellLabel->
  "During evaluation of \
In[73]:=",ExpressionUUID->"86f6bbd6-b352-4da0-8e15-2879fef0a915"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
DyO6xqU=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
9nfBPkf2/xKLt8w=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
WwG5FA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJwt1nlU1OUaB/AZNtlUUCQjFVAvBeaSSslF/A50BbNbCokFlXhMkTIvKJqI
GyGIZW6goJmaYKAoIOACYv5+gMAlTERWAdl3BhiGWZgBhmTe5z1nzvwB55n3
+X6e3/v+bLcEem3TEQgEL15/Jr5/vTixshEUte+au7MU9l+dzpO/8whHOnXH
exUSZM+J7PXMeozckPDpAVcGcD3Ixbg6gUenm9OO64f7IPbMev0fuXh1yKtm
XlQvli+bWPl4WTdLzyyjGwcsUj2aQ5+g4vcfE3PUnciXv/P6FwpQv8LK0efr
Drwu9rpiEeIMTUoKq9rgNVHO8/+4/uSud8DWVrD9FeNEVVysiV4LWkInCv6F
Btsq8/LMJtrvU0jeOtrzcVsDdk1sL+hvRASnuHocqKf9P0Of3urcZQ61EGjX
c2RlR/mq+6upn+eYunr2wJOiSqxpnviBMmwaD/9IllFO/ZWh88gUyRtpZTiT
N9HAC9wZSqt9treU+i3H5hLn8P3JJdC2U10O8zctDlmri6j/CsRbGW9o2/IE
1hPbmVOJnQsOt89s5aEtl1eJG8a/pe6QPoS/dlWh0eeLeykedymfapTqn9pX
e+wWJqpZpFYjM/XtEN+TlymvGmh8lJrdG3ZDMVFOXgPzBavUjS0xHMvvJfpy
JX59kj+4VdqCtbDdOWfvtbo7HMuzFqYZyQsKEu5zxya2F1mH0w+8zL28HnEO
2nzrcfbIVpd1Mp579nRi1cNJFXlZlpnPaeMLegXDjsaWlIBCTtuuRQPab5Ya
G0wv5rTby2pALee7+EhmCact91UjPh0J+Shm7TOOeTTBzjc10Pf75xzrpwkm
5tHP304r45hPEyrEegfa+l5wrL8mrJo96MK/U8Exr2Z84eDs0uVXSf02I3ij
qV1UTBXH/JpxrtZzU0F+NfXfglkV8sXFkhpOu53TLTjm7S65b1XLsXItWNIr
mZfuWsdpeZe1wjRdfLVmWz2n5YtsRWNEfNJ/o15xjKcVkzMvGi5IbODYPLah
6VDnsjN5jRzzb4N4z9Pkj//XxP2tza8NV6bOd1yobuLYPLRjNCXCXhXRzLH5
bcdXm3uDc6a0cGw+2tFqvi7iSFwL5duBWU7HN663buXYvHRgT0jS/hWJrZR3
B74VF1m6vdvGsfnpxIr4AOUP6W2UfydKYj4/0eTYzrF56sTOqA/6o7LbyaML
eZ/eFO9d2UEeXfjQ0sYo83EHeXRBP297mIeokzy6cC6j9RPn3E7y6IbboxOL
Y127yKMblhdv3/TL7eK08fV2Q3EjyPiqqJvTtuvSg6zvHHd+yXWTRw+uPUz/
85JLD3n0YOdJyUP/nB7y6MUv0fPUeSt6yaMXfS3ru+/f6yWPXmxKaChbs1RM
HmLcXDNeezhVTB5iqIcFpn4OfeQhxuXPwz8d+KOPPPpwrOFUkKNtP3n0wSr/
ut0Hv/Vz7PzqQ5Fr4mS15QB59KPLNOv20bMD5NGPJkTliPUl5NGPz05V+gs+
lJDHAFpbI8PGj0jIYwDOJ/1vih9JyGMA/C+/H/hLJSEPCZyfHDpx6f1B6keC
2HCHgC3Bg+QjgVA/+DfbO4PUnwReew+l1YkHyUuCRT1h/4qxl1K/EjR07w9b
6y8lPwmSxPUivQQp9T8IMx+PjrxGKXkOYmTXYsnxWUOUxyDSbsc0fOEzRL6D
sGu7udQxdojyGcTyhlOBNuVD9PwNojVWYTXbTMbN0DYoxYWiV38u/ERGz6MU
MmuX9g0/y7jt2vykiLnxeO75IhnHzlsplMV7Jw/qyTl2nkuRtOdXtx1ucjq/
pLDp9fA3CJNzJtp8h+CTgfkFf8o5dj4PQbQ0fUnyiJz7Wpv3EJacN/goy0lB
590Qrhx4sFy6T8GlafMfgo7N3ELf+wquRjtPQ/jP6R11MpmCE2o9ZPg8frtf
/jIlecgQFvjT2uLdSvKQQSWrTzDKUJKHDI+KjcOjBpXkIcPuNH9T9/eGyUMG
s36jg2t2DZOHDBd3q2dFpw+ThxwbcvzW2UmHyUOOtLTC44bLVOQhx+a4vd4r
96jIQ46AA2U+BfdU5CHHmo1VnyUpVeQhx+pzCbM6nNTkoYBz5JzkyINq8lDg
Wfhts585NXkosPqeQaRSZ4Q8FHjxs/2mF+4j5KGAxfwtb1ifGCEPBazePejV
UjpCHkpcLZlWazNjlDyU2Jg46Xqj7yh5KDHwxryKeddGyUMJ0fLmx9LOUfJQ
ImBboNhz8Rh5KHGrteEtj31j5DGMgtQz7jXcGHkM47x9U4KJkYY8huEgmJbS
6aUhj2HkxJ20Db6sIY9hzJRuN7nXpSGPYZSleDy5u3ycPIbRGJ+s3v/jOHmo
8N7p2AempePkocLq234ZD6cIeOahgvn6uG83vS/gmYcKu1pW2v6wScAzDxVe
hq29axAl4JmHCjpTHVxm3BHwzEONpDhvq6SXAp55qLHIestQrq6QZx5qOCSF
Pd6xSMgzDzWuJYcXJvsIeeahxv05u9IjI4U881AjekpRlG6GkGceI9Bx/+bR
gkYhzzxGMLLSw9Fgsg7PPEbQfGOl9yVnHZ55jCC7/LCB7DsdnnmMQOH0U+Gb
l3R45jGC0OlLMy2f6vDMYxRJB10uysd0ePb+MIqpcy/r5S3R5ZnHKPiqC17H
t+ryzGMUsYl2hd4XdXnmMYp1NgVXVpTq8sxjFObvOS0VGejxzGMUPmfjjQ6t
0uOZxxgy7QN1hCF6PPMYQ1B3aXBjhh55jGFOyC6fhQN65DGGhNAtEcKF+uQx
hsDnruV7vtcnjzFsLTQJjk/RJw8NVIvsHW5I9MlDA9cZ+WmJjgbkoYFlQLV5
3kED8tBgON5u4dxCA/LQwNy57t9D5pPIQ4N9qc9D/DdPIo9xrHlwX5qRPok8
xiGfP32PpYEheYzjzbSIlKqvDcljHLMHG391yzYkj3FEO7698u5MI/IYR0lF
aHb0QSOe3R8CUeTZnGne7UbUj0A0O7QzKvIzY549LwJRaKmNqqDImGf3sUD0
+EJlXKWbCXkJRIa9V7+7UGDCs/tNIOq5df4bW09T8hOIqvlvF/Adpjy7vwWi
KNHMbRbHJ5OnQKQx+WmV/QdTeHYfCkSe0euFVxRTyFcgmuZlXtBaPJXyEYhM
NO8fLfU1I2+B6Mt4Tf78JjPKSyi6ViE5k7TfnPyFooIf7JXnFk3j2fuBUHT1
783SDuPpNA+v/76eP5o434Jn961Q5BpjosPfmkHzIRRZRzvsrF40k2fvE0LR
+LqCdb7uNvw/gJPJSA==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"\[Rho](t)\"", TraditionalForm]}, 
     AxesOrigin -> {0.056458333333333464`, -9.396292761388947}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameTicks -> {{
        Charting`ScaledTicks[
        "Log", {Log, Exp}, "Nice", WorkingPrecision -> 15.954589770191003`, 
         RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Plot of \[Rho](t) for Different C1 and C2 Values\"", 
       TraditionalForm], 
     PlotRange -> {{0.056458333333333464`, 2.19}, {-9.396292761388947, 
      1.1394716555882631`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {
       Charting`ScaledTicks[
       "Linear", {Identity, Identity}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[
       "Log", {Log, Exp}, "Nice", WorkingPrecision -> 15.954589770191003`, 
        RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"C1=0.5, C2=0.5\"", "\"C1=1, C2=1\"", "\"C1=2, C2=2\"", 
       "\"C1=4, C2=4\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9430733105779085`*^9, 3.9430733750964785`*^9, {3.9430734869024096`*^9, 
   3.9430735017773113`*^9}, {3.94307359009624*^9, 3.943073610061466*^9}, {
   3.9430736721259813`*^9, 3.943073735695031*^9}, {3.9460329285031548`*^9, 
   3.946032965241041*^9}, 3.9460333434318857`*^9, 3.9460333991858273`*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"d060bb94-9375-4a11-9c14-772dcd0b9f04"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12nc81P8fAHB7r3N3OI67o6GiQUND75cGlbSlPUW/hgbRToqGVMoO2TTI
LFl3ZGWUTUslRaIk5Myfr8+r+6fHParPvd+v5+v1eb3f78+Ht+fIun1iIiIi
Z8RFRP77Myjwv89z8v5GnolFN1cwadutvB79LHLee4/DmVIdwXMd9x9r03PI
01mewx0mbEHUUVO5+kgB+TZ1Bd1URVPQvjZ99F/kEuGVrqKZ8zQEM43/+7wg
yoMtvS3RaoIzjASLz6fzCetIpEmaOVPwokd/9BcKyEqnNDUROkMwerHRKxaR
k2YtwzbidMG6/y63tpicjDy4spmmKqDG95JIT3hCH5pLEzSd/u+CJWSW0u/H
n11UcLxlpPolr0PKW1lw7L/hHS0ndKkHc7PXKeH4X5Ftyyd5P5+uKBAZ+1QQ
urdV9bmJCjifCrI5zmmHxkx5wbLP//1AJeGYT4uV3SCH86sk7A1JV6e5ywpu
5/03gSoS/vTq99QCGZxvNYk6nvREgiEjGJtOfTX5eeHnIr6DNM6/hnDW/lJI
rpEScP4bjk4t0f8f/XrFEinB2OXyasm+XFf/qTmSAruxTx3RMDmeM0AkMT71
RP7+yIoLLyUE/12NkVBPJhqdkmZukcB4NZCJR5LPTf4tLuj973I9DWSH0a/o
BTfFMX5vyKcJip2108UFC8cu+JbUm1r732gQw3i+JXfO7Jwp6i4m8PhveO7v
SOCWCrcPs8QEk8fi+560mfuvq24TFbwq++/znphPqg25FykqGAvf0Q9Eu7Ig
u2enqGBsuoxGYus88jyGIyoYG156I9kuNj7hZJOIYOxy2z4Sze7SRfPiRNDj
E4lT+TA756gIzucTOX9h/N+380XQ5xOR0Jm06ICsCM7vE+kSjIv3Th7hU16f
SfuHNOvHG0f41Hw/kwsrhJtbh4f5lN9nEqpnpar0aJhPzb+JzJAz7Pi+ZZg/
NpxbTaTwbTx9pdIwn7pcE4kxdlaXKRjij/EafyG/+IwH3eeH+GN87l+IlXWm
9Y/5Q3yK5wsZOu5hWTwwyKfysZl0ufnoHcgZ5FP+zWQ7e1lS0qVBfvlY/JpJ
vtL4uouWg3wqH76SvKSXm/nMQT6Vv1+J1GLfgjVNA3wqP76S0h2Bi3WSBvhU
fL+RTJ6rK81tgE/lyzey9qrmbab1AJ+K9zcybdv6GrXJA3wqf1rIhIgV38RE
B/hU/FvIk8m2F4vf9POpfGohEvmsozap/XzKo5VcTLU7HXa7n095tJKr8THW
vg79fMqjlezZX+irv6qfT3m0kpK42PtW0/rR4zthuIUE99H60eM7+X2p1UGn
V8gfC9+P7+RrGzs29Z2QPzZd0zbip7fzdFKeED3ayI1m2+fyj4To0UYyP08u
zvARoscPcih+jd/TC0L0+EEiBIoBfw8K0eMHWfkthe+8WYge7eS8XaqL4TIh
erST6+t0QpgmQvRoJ64LvU5PmiREjw7Cuer6Yq+WED06iJkC4zZfScin7l8d
JOENfbOJuBA9fpKryvu6X/b1ocdPEhid4330Vx96/CQhu+Of6bf0occvsjit
EX597EOPX2R5YsLm3Dd96PGLvAnoORdc04cenYSrpepyvqIP59NJbDYbbtlX
3oc+neSdy1OP1aV9OL9OsuQmPXp+SR96dZJVUz2i9Ue/U/PtJBv+mvGZo/+e
8uskH9tTjoiNXo+a/29y9orw1M/Xfej5m1xO8vj2proP4zH6XbtfrKChD31/
k/Bgzp7Exj6Mz2+yaAP3ffDXPqy/36T8+6ebnh19fObYBLtI3R+vxnO9fViP
XSTRxMb5hIiQbz8Wvy6Sd3rLcid5IZ+633aRTa9z7p5VF/Kp+3kXUXkm+v72
OCGfun91kUNHXLpTjIR8+bH4/iHms0SGWs2EfOr+/IconOi2NV4n5G8fi/cf
EmO4osNvr5BP3e/+kPUavQ/VnYX8J2Px/0OCT3rKZlwT8hvG8ukPsanQfuUW
KuSLjnl0kxiV/Zouqf/yq5tIW5geDS4Vokc3CTG2SOv78i/fusnQI/U5d4aE
6NFNxGbceXJEox89usmmhynLA2b+q6dusqouJ4a+rh89esiJ6Jov34/+q68e
ctpJJEzPux89esjzLwKxkuR/9dZDnnWovfhW248ePeR2w/hpl/v70aOHXEg6
MjOeO4AevcRlVub+w8sG0KOX3NuWRK88NoAevcRo7qK5X4MH0KOXfL3QFPXs
5QB69BLz5tSejX0D6NFLwi+mPqrSH0SPv2RG9d9Z87cOosdfcmPNBLGIW4Po
8Zd4RZt6sQoH0eMvcc4sPJE2PIgef8n4I6G3rs8dQo+/pPrXKWGC8xB69BHN
/etnzns6hB59ZGVD54KlfUPo0UfkxLJj2xYMo0cfmas0g29+eRg9+ojUKma0
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
w/rgwcmEu8EfpR5gfehC8ttUfwfeA/7/Ad571Zo=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw12nc81G8cAHB7OzeMw527o4GmFmk8n7S0k0p7/KKlob2UVEZGSSkNUUaD
RKjMu1C2kFUhM0pKKZ39u3w/7p/fy6vfPfd9Pu/P5/t8nu/zFfy3f4WDjJSU
1ClZKal//711898nkax/3NiRl8QXmWy4nP7HOIWUH7yxsX+TgSjRwK3V5mUa
aXOx0e8o1heFOc1QqQgVkeyj959KR+uKvtm8lPwfr4id/f4wTpWOaNLEf58M
0iFYG3hokbbolGb0/LqTmeTCUXv+qR+aoow/xpJfeE14refqH6SxRJLBJCNm
EUFw4rvrsUzRin/D2WQTuS+xI0+mM0TU9eUQgeVW0bNvdFH9yX8D5pLOO47j
PEbT8XrziUe+fkh1H0104N/lORWQSz/l75Wlq+P1F5JtlbThJaFqIqnBTxFJ
2zbBYkOQKs6niNSwbNZ7RqmIrOv+/UAx2Xfp+sKqQmWcXzE5t9bkkKWMssgv
/d8ESkhU3ouE4jlKON93pEMx4iA9QFE0OJ2Kd+RVrxz/1k8FnH8pKZ1c8H7m
WgUR79/lGJSRjQdbXH7nyosGh0svIzvbl2gUz5UXbR/8lJPPSu6d8jlyGJ8K
YkMbO6nKVk70bzTN6AqiZP6RHdski/GqJGcP/fDtOC0r6vw33J9KoqlKcgQc
WYzfe2J2as66LKGMaObggB8IT87R9dROGYznB/L25s/MT1oyIvd/l+f2kZRG
QOLdLGmR6WB8q0jH912/d5+WFhXm//tUkZJbCiP6p0iLBsPnVE1U2O+XsH9L
iQanq1lDItiX1VzipUSDl/eyhrR0Z6n0HZMSDQ634RP59W7Eoa0zpdCjlvjG
pzi7KErhfGrJgWQVxQ0RA0LKp5b8MNVed8lqQEjNr5Z89DYct7yhX0h51ZEz
1VnDtnr2C6n51pFo2ekpbmb9QsqvjjS+yW52r+kTUvOvJ5Z1+8PNLvcJBy/n
cj3xfUnCVs/uE1LD1RPdlxodOd29wkHeiQ1kWKjHi/8SeoWDfG4NJFHm1Lfu
g71CiqeB1Gmkj9g/sVdI5WMjyWKVbb7b2SOk/BuJY6P7610pPcKCwfg1EhPX
ZZfiL/QIqXxoIu3/PSretqxHSOVvE+kmLPtNnB4hlR9NxMV01XOf1m4hFd/P
ZOb6uBeVKd1CKl8+E6eW9KQxft1CKt6fSbxt0IbjDt1CKn+aietu830R07uF
VPybSVFAxKcIrW4hlU/NJN1t+JNd7V1CyqOF7LeKLviU3yWkPFrIDlM5o57H
XejRQn5vVnOM9upCjxay6OHqCW2OXejxhZh8SM6KXNqFHl/IzOSu8Z8mdAkH
w9f6hYwJmsI/ze4SDk53xlfSabH266kBMXp8JXHmRmdKmsXo8ZWsu9q//nix
GD1aSbL7/ksOKWL0aCVkpEGo/0MxerSSq9J7wsQBYvT4RqaYebOuXBCjxzdy
eY96w6rDYvT4Ro7urD8wy0GMHm2kLyvVfamdGD3ayDyf6kXHF4qF1P2rjUSE
mS5KmilGj+9kTPWT3fRJYvT4TlzFtl+OmorR4ztxmtu7/qtAjB4/yLbjBY93
6InR4wexH8infWOJ0eMHub83QeMITYwe7eSyWOmclMrQfNqJ7dqNbj4KYvRp
JxOf15zTkRuaXztZf0FxdIiMGL3ayZlb3ieGywzNt53UtR9+HCH5m/JrJxb5
TrON5Ibm/5McWbaYdlsyPuX5kxhGBevSVIbi8ZPYb3vw0llyfZTvT5Jjteh8
M2soPj/JQSnb1csk86Pq7yeZfiXbNkEyf63BCf4iVj6eDXqS+FD1+IukjJCO
d50oFu4YjN8vssGHn9w6Qyyk7re/yN6rh8zXLxALqfv5L2KoeDS2ZJVYSN2/
fhFZGe2+ldvEQtXB+HaQauaeaU0HxELq/txBDo56XOXuKhZuHIx3BxkRMvv+
DH+xkLrfdZCv+cvvqYeJhU8H499BgueYze15LhZWDuZTB+nJ3r9CNU8slB70
+E3Gh7d+saod8vhNmvYs8nnQOeTxmzj5pnIJrQs9fhPxddWvGiOH6uc3qQ+T
f8Sf1YUev4ngw6LzxzcM1dNvMnDWWYd3ogs9/pArioUunBtD9fWHzMznrDnx
vAs9/pC5p45kzqwYqrc/JDV4+PGjXV3o8Yd0ym1MNeV2o8cfInfT8fR2q270
6CSM+IcLJu/qRo9OUtrDcAi90o0encTrWmxhanI3enSSG51Vi/2bu9Gjk+Re
23xinFYPenQSB5+IwrA5Pejxl6g1yD2XOdqDHn+J/07TG+se9aDHXzJm8teW
tJoe9PhL9nU7zZ6t3Ysef8kTOY3Dvct60eMvaWtJ9Zfy6UUPMdlx7pLujtyh
+6+YtI0067dW7UMPMTnT/bZAtLQPPcSkoPNE3tdrfeghJmWjHRhN1X3oISYH
l9olvDXpRw8xSS71bc8/3o8eXeTAWa9F0nlD608XyR87pfAqfwA9usin0R8n
RZ8YQI8uwnh20fR0+QB6dJHvT9/MCdSXwv6ii4yTW1vct0RKRHl0k61+7Dde
56Rwve4mb3aHpGxIlBJRHt3kxpxY36u/pLAf6SbyORs8bMZKY7/TTeoyDj5K
3iON63s3adup+qXribSI8ugh67THOJv/ksb+pYeUrE8YGzpVRkR59JA/ljWv
9l8Y6gd6iPvwDrvSEhkR5dFDKi01vqsNlxVRHj1k7WTm53WnZEWURy9Z57Ep
VL5cFvuHXnJh4d4Z6yfL4freS7bXVC6KvSmH/VEv2Zo4schBVh77sV6Sy66x
qj0oL6I8eokncHP8W+Sxv+klR8Yq3umxH+qn+oiC7bFHES0K2L/1kTr/hSfH
HVbEfrCP6BvGOM5WUsJ+qI/0fQhcHBauhP1oH0kPdTw8aslQv9dHGmbu2lsw
oIwe/eS4eYft3TQV9OgnV2MTNSu8VNGjn0jnbRB+dFBDj37ywW3+hNk2Q/1n
P4GGt8drl9LQo5+Ezm9ZVrhFAz0GSA57TULaHDp6DJDtRmcFDU109BggM9SW
ZboEMNBjgNyMd13hu4qJHgPk2Ar/UfbGLPQYIBq+0fqldE3sr6QgVdfWbzZT
C+cjBQ8mLOC9H6+N/bMUvKocfiPugI6IWo+loPHx/OYpH9noJQXiOs65Y0f0
sD+Vgswo2vJ3CznoJwX1UHG8aKeBiFq/pWCmV7ZRghMfPaXg2DV6lOdnAfaD
UkBXWrmzLcIIfaVgQ8e2jdtyh2N8pCDrIq348BFj9JZc3+7qK8PqRmG8pGFV
wFrf/Mnj0V8a7mtv1jfYNFFE9QfSULL693ldmgXmgzSsqdOWb0sm2H9KQ9WL
G29OL56P+SENt5UytiXWrxJR/YQ05FS1ubAt3DFfpKF+b7JVL38jUOuzNIw2
3/zAsGshUPkjDan9109MvToLqP5DGlxVFq9u17UEKp+koeKh63jr7ElAccjA
avNnGmHWZkB5yEDLMqa8890xQHnIgG1erI9auwlQ+SYDYw1tx09hjwTKQwYa
FX5eSCsbBlT+ycCGijXVBwcMgfKQgUidrGSFkwKg8lEGrklZ/xc1gQ+UhwzE
+9LuKlkYAJWfMpD0sEjq6hoOUB4ysMhee9PGl3pAechA4S+O8rzFukB5yMDV
M0/PRKqygfKQhSc7REXpP7SB8pCF39sNbQQdWkDlsyxkl5gt2MnQAspDFvyd
tlQoztcEykMWOBd2VDGusIDykAUdf2LFbmMC5SEL1Qf0HVlrmUB5yEK6ZczV
pe8Y6CELMRft7qxZx0APWRi954KB+BsdPWRByWm3jKEXHT1k4d1Ml4Gf4+no
IQe/d4ZOWPBKAz3k4G6WwGeYmQZ6yMGLVKGUXQwNPeRgltwvk9YZNPSQg3Vx
+zXo79XRQzIeo7VZ01UdPeRA9e+vMIfJ6ughB5/YYOz5Rw095OBy/0IlvVdq
6CEHPktUigpvqKGHHPCC/B7vO6GGHnJAzs3YX+aghh5ysHR5gMKvDWroIQ9v
RVmGbzapoYc8WB8KWbDdUQ095OHgSLPx3efU0EMedO4ZOKaGq6GHPLhttTgh
VaqGHvLgKE0zM6Wpo4c89GQnBCWuVEcPedB0MFpv/VAdPeTBe62bh68yDT3k
4ZL1SYetJ2joIQ/fPvaXvBLT0EMe7l5clVHhqYEeCpAjrug5o0VHDwXwEenf
t3eio4cCrArbu025nI4eCtBTHrXw3HwGeihA4ZSPOZpvGOihAF7/2cSALRM9
FGC3c6mkDWaihwJU3TJkV4Sw0EMBnNTJrS8OmuihAOEzcxK1ZmuhhwLYGWtt
Yk/XRg/J94U19l6rdNBDAU4bLrxjGDBUH4pgHxSgx5DRQw9F0G+MYZ8N10cP
RUhIunNjiTcXPRTB291wBTeDhx6KcHPVOp3e8QL0UIS59rUzHNMN0UMRdj0+
17b58TD0UATNUSkTmxRGoociPDrL2FQob4oeipBkQqJC28eghyLERH2tCr9v
hh6KYEBf4rHl2GT0UILQdQmm3/ZOQw8lqEzUNWvtsUIPJWBZZLT/yl6KHkpg
Q4SmE8zt0UMJaq+YL9Zb64TrpRJEPskMyzFZgeuHEixb1rz1hslcXD+VQNtS
eOF7+wxcP5SAuWGEU6e5Oa6nShC3Zf3rc1ITcf1QguEkd4oidzyuH0pgPrV9
bqzCaFw/lGC/b3PBoXJjXD+Uodr2qd2h1SNw/VCG5WvH+SbbDsP1VxkWTONG
kyeGuH4oA//uoujgxQJcj5WhJnX7sFGGfFw/lKG2s3o1Z64Brh/KYFP+IjPf
i4PrhzIwXRpeJCrp4/MbZYh0rW01SNDF/kMZ2v60J6z2ZOPzI2UwcxZ+WOKs
g/2IMrA23L/P99HG9VwFcmwiI9/FDa3nKsBwmZbPa9fE9VwFtjgWLl80UxP7
FRUYMX6kUO0OC9dzFdhRdP7MYUUWeqjAs85tfh/PMNFDBcaes6OVSzHRQwUO
P8o9Y+zDQA8V8FV7YCvkMdBDBaKVl7EeJtHRQwXOejMLVDcMPa9TgdnC/Cum
snT0UIEzd8ccebppqP9RBfVpJx62CWnooQo5j1bxfhnT0EMVXu33nPE8UB09
VEHozS2bR1NHD1W4rVs68pWnGnqowo+BkO3LFdXQQxVam1yDRl1URQ9VWOrT
23dVXRU9VMHf5ufpd1dV0EMVWC2KGdP0VdBDFWK6GKuGhw71h6qQor6J9cNU
GT3UYGOJ6de+WCX0UANymbxJMVdCDzWIrRn2+k6yInqoAafcL0RrhiJ6qEHW
MRvbiGQF9FADE9tVf8qmDD0/VIP4U9vyJkXLo4catFuFum0UDPXLalCjah3R
eVkOPdTg2LrbivFdsuihBtVXFh9ds0kWPdRgbIXrihepMuihBrPX5Yx8riOD
Hupg59VuslSyf6A81CFxnMl532Qp9FAHLSepzYHyUuihDqWzT06zDejH/Zw6
lHxsmTpCuw/3Q+ow9aSN8qlLPfi8Rh3eT5zLXjYwtF+VjO8dsTFn19DzD3XY
Sj8fPOVtJ+6X1CFA++M9ObM/+HxHHX7oBK1O8evA/aw6zF2nPqXnx098XkID
5V8TOhyXt+P+lgYe05ZePb2jDfeHNLDMrVs+2/wr7ndpcLPlxYATqxn3izRI
PuX2bdRAA+5/aTD99Znzu/pqcf9IA+a69D1ZgircD0vGz5qaZ3C8HPeTNGD3
VMmYyhTj/pgGDrW9rWM8snB/SYM7vcEaUX1JuF+mgXF/HDE4G4z7TRp0Z5qq
OHuEEcpDA9SGSf1asSuZUB4aYLbz2OStWa8J5aEBc1x0rIzWFRDKQwMyVsXX
ypmXEMpDA2JO7U3xOFdGKA8NuFKgYNrlV0koDw3QPm78VcX+I6E8NGBLKZMT
11dNKA8NGHV/KdEYX0soDw1QX5dTUDyvjlAeGvDY5Nv59XPqCeWhASMbtXa1
mzQQyoMOpkoq19+LGwh1O6ID78PpEVufNRLq+RkdMmcbZRTaNeH86HCm0izF
/msTobzo4GhAe7zR8TOh+ns63Pc08/z68TOh9it0ECU9m2E2oxnnT4cAt2D3
RX7NhPKkg65zkNm88mZCraeS8WWrwvn0FkLtZ+iQbGIWkT+zhVDPs+mwP3bU
/LHbWgjlTYea0800zpkWjBcdlt84PmWzXwuh9jt0qH6YLh9/q4UMhu8mHQ6N
9ZydG9RCqHygwz6lrfFzJf9OxZMOW0fqhqVJvk/th+hwzCL+SLprC6Ge99JB
x7N7SuneFjKYLvl0eDBdYfLeVS0Ybzo4JGRd7rNoIdTzUTpMiW3K/cZuIdTj
UDpcOpC87tafZkI9/qHDXw330ZveNqMHA/wWa5pcjGhGDwbYlZ2LdTjVjB4M
WFyfrGWxtJkMXp4BAx7ZB8gRXjN6MCB7uPufuO9DHgxYP1raJy9lyEPSd/kE
/k64+JkMTlfSl82boz09eNVn9GDA26cZIU/5n9GDAfKavBrV1ib0YEDo2tmH
yuKb0IMB7k+tG03PNKEHAy5/aeocOb8JPRgQseLW1yaNJvRgwMWbEVGnKhvR
gwEfU3SV+kMa0YMBql6TSlx2NaIHAzpvbGMxJzSiBwP2xKmNyexuQA8GTA3a
1Rua0UCo+mXAiYKI7lSfBvRggIbwxDru6gb0YEA7d7NRPq8BPRhwhRu98N2X
evSQzH96ZK5lfD16MCG16tULZZd69GDCtOXKK+ctrEcPJoxxNBd0atWjBxMi
Dfk/ufV16MGE88c+/X4VXYceTEh+kZ3bdKoOPZgQrDXJ22dBHXowof/RrNKX
OnXowYSIcQ9K93yuRQ8m3OTcWfU4oRY9mCAzuTPjoFstekj+fa6HRdaqWvRg
wsb/8lwejqhFDyZUBLbOGtv+CT2YYCv7LnvEtU/owYTC6hVxllM/oQcTYr2v
J+76VIMeTLg45vuUOPca9GBCprhrgva4GvRgQkwRc/eVymr0YELDx4GVRuer
0YMp6T8Ux+eOrUYPJlzatEv6wscq9GACI3Bx8NKLVejBBIHRuISRFlXowYL2
3zXZai0f0YMFj3Yrkp7Aj+jBAv7a9ZvbF35EDxbsf7dtzZe+D+jBArF8j1VD
7Af0YAGz9cTwj9s/oAcLjmoGdxZwPqAHC25bTQp5+e49erDAlnZcOtD7PXqw
IPvU8p8757xHDxYEtS6UrBmV6MGClef2JpW8rEQPFvDyqo0dDg/d31mwSX2L
bdX4SvRggbfbM+nJ3yvQgwVLDmT1OkZVoAcLzt2r1TjjWIEeLLigcVl556gK
9GDBk7TAlBHfytGDBYYKWVIvnpSjBwvWTAiO03IqRw8WTLZWTCQTy9GDBa2+
lT1mf8vQgwXGG7fu+5Jchh4ssAqtUNnmWoYemiC2S313e34ZemiCqq5FqR+t
DD00YbH0Rj4pL0UPTYhNPlAWercUPTRhc5qRXsqOUvTQhJMezw3czErRQxP6
Qk24vT3v0EMTwizs1hpkvUMPTTB9oSr44v8OPTTBeoNO/trN79BDE4Ll16Xs
Hf0OPTRBoSlno2F3CXpI9pFeR0YcyS5BD004+tz1+rYbJeihCZZ2Rhat20vQ
QxNmsa8HK0vWb8pDE1pLNBxTFEvQQxPqJ8daSb8vRg9N0Go9VFn2uBg9NCHm
rHaL+eli9NAED1sF8+HLi9FDMt+4+dduGxWjhyawT26oDPxbhB6a8NnCpEkv
vwg9NGFgxvtw3r0i9NCCmguvaOFHi9BDCwwzrbiPFhehhxYMJDyuMDEqQg8t
mH7M5NbC32/RQws+f79qOjH0LXpoQffPWfeUbd+ihxYEGyYty5V9ix5asCVf
L/BAQiF6aIHt04pvPTsK0UML0q4eK3LQL0QPLfB/Y1MW+bYAPbTg2Z1FQbkX
CtBDcr3s6+/TLAvQQwuc3zgudPuZjx5awP1RmKb3KB89tMBlmLWm89Z89NCC
2wvDp0To5aOHFqgaJvKul+ahhxZcctCvsL6chx5aUODx5UDywjz00IKDep7M
VoU89JDE86t9S2lGLnpogcOHxHFHXXPRQwv4zsvN8kkuekiux3meVWl/Dnpo
Q8v7kgzvtBz00IYHP1WN2s/koIc27NoeXdlPctBDGwrrGncmSOeghzZYJdC3
MTKz0UMbXNdd3Ur3yEYPbeCVByrHLMxGD21o7K1X+U7LRg9t0L0dwMt+l4Ue
2sA+K6s2/WYWemiDsqPz3fmbs9BDGxw/6D9tGZ6FHtrwJzmQx217gx7aUNuj
9bE+/g16aMP0Xx1l5qffoIc22EbdV9eb9wY9tMGQfsTTQ+MNemjDxMrDq868
f40e2hBsb+7TG/oaPbQheXPcYqn9r9FDG4wn6gg9LF+jhzacXxTCuqLwGj20
YeOIQ+f03mWihzZkmRxeZBiSiR7asA8EzyP2ZqKHDnyy2MOImJaJHjqwqjEg
zkAlEz10wOOncjftfQZ66ECU67QFRx5moIcOHDp0Tm358Qz00AH7rV0JQdYZ
6KEDjOUb0jboZqCHDkxUaQnz/pqOHjrwZrjlD+OUdPTQgcwYM5OJl9LRQwdW
uxY1PtySjh46EDyCm+Q5MR09dKDimPz8YoV09NCBbamzxrl+eIUeOkA7aMG5
Ef0KPXTgZ2B9CuP8K/SQXE94zOsfdq/QQwd82/e3jxvzCj0k308b31sk8wo9
dGDum9FPiitF6KED5xdE549/KkIPHZgW8de4zU2EHjpg6TQqQH6jCD10wEZh
8pfjk0TooQM5obHS89RE6MGGvrI4l4psIXqwIaCggllyQogebFg7YHrlxCgh
erCh4E1aRV51Gnqwwen5+Pw3fmnowQZF3rkNO+ekoQcbQhzbz0SLU9GDDRbL
Cs1uPElFDzasTt14ir8tFT3YoBn1eJe1bip6sCEycDtTvSgFPdjwIy/Tf49H
CnqwQW2dnYYDSUEPNrx4/y3u999k9GCDaeG+ON3YZPRgw+JXovklu5PRgw0Z
SiGxnOHJ6MGGmIkXLP5+SkIPNozlnDXdcjsJPdgQf9OoapVdEnqwQbp448Ny
VhJ6sGEud0t7bVEierDBxs9V/9ClRPRgQ7680Q3vxYmE2s+yYcubq+XGqono
oQsGLztXLMh9iR668FPH2Lv14kv00IX+pFBZ2sKX6KELqu8c5z1VeYkeunBp
Unt9Qd4L9NCFcXqde3f6vkAPXdB0OOt6etkL9NAF75UvU1SZL9BDF2QTyjMY
Zc/RQxdGnFOHS4HP0UMXZnQf+OSy4Tl6SP7mN69s4j9HD11Y8FhpTWpTAnro
Qsta7XCFyAT00IVRKZ96hU4J6KEL7UtjhrVMSUAPyfyUp38+3RePHrpw09pH
42xmPHrowmVm28E273j00AVu+ofPmbbx6KELVXLtc+U58eihC0WTS/c9aYxD
D12YRjOdk/IkDj104X7Umajxx+LQQxdo3y38lWfFoYcezNS72DBXNQ499OBl
zRr/xrJn6KEHNYHTrjWGPEMPPZj7bVP9nD3P0EMPVoSdOiFn8Qw99CC55s1a
Q7ln6KEHOmca3IOKYtFDD4wb3ikeCYpFDz1Y+7X184PdseihB7ZjMswmW8Si
hx54uY3s0leIRQ89SCnSsFlfGoMeku93XFr+634MeugBVy+LUXsgBj304NuU
6lijWTHooQeuSd+Wp9Bj0ENPEq+/RitePUUPPbg4tWpyydan6KEHzO6/xn9l
nqKHHlR5Wa8UhkWjhx6c7Z+jaTI/Gj30IMA6K3fC1yfooQePIztrPvg+QQ89
2Oc7IZU34Ql66IHFk77ygfIo9NCH60lf7p9wjkIPfZi14Pwdb8Mo9JD8PWzm
nEk5keihD/yurbyDTpHooQ9/Nvx9MZsdiR76MGCccOeB6DF66MOHUd+33Nn1
GD30wXasyx0+6zF66IP3gtTWCamP0EMfXC/b/yje8Qg99OFbv/viXuYj9NAH
06xTUTFpD9FDHy6XFaa07X6IHvowNXr8uGc6D9FDH5R8tif2Zj5AD31YlmOp
lX/wAXrow1PvvVI8wQP00Afay/Dpv99GoIc+/B323+WFLhHooQ9yrNZX/HER
6KEPPXWz7x35FI4e+gCK3P75fuHooQ8PZr2Juj4rHD30YZiywG1LRxh66MMP
y6v/hYWHoQcHnAe6jLauCUMPDrz8cicyQDUMPTigt1TwCYSh6MGBFcWnH2w9
FIoeHGgb9b29c2QoenCgwaj58UDVffTgwKFEleyT/vfRgwP57pyZO6zvowcH
0mw65TP776EHB+oLnfX9Eu6hBwfY166dzt1zDz044D9VZ+zBYffQgwP7IrPN
3KtC0IMDX8IX+8kHhKAHB+w3c1b+WBKCHhww3eTsZaUYgh4cWPmr0b3XNRg9
JL8vc9xodudd9OBA0WhPLTvHu+jBgXKrSb5T6oLQgwPNv4uEn+yC0IMDcvbl
zcvf3kEPDvjJFc7xnH8HPTiQmg/6F0S30YMDnEfh8VaWt9GDCzdmLt+cHn8L
Pbjg0bZ5n/T4W+jBBSHv6dT+yJvowYWUynTuC+Ob6MGF8Z5Jp0wjAtGDC1E8
SFw9LBA9uJC06zhYht5ADy60BnW4vDO8gR5cYJnf/coPvY4eXFCUffaXP+w6
enBh/oEHhiXhAejBhSP6I1snGAegBxecPXpKZ0VeQw8uWAyX3dk39hp6cOGJ
i+F4+7ir6MGFzkdTUg9bXEUPLkz+pBg6Js0fPbhQajf9hO8cf/TgwvqViz76
511BDy7MXOe0c7rtFfTgwrP7dzM8P/qhBxdMUg5fPWrvhx5csE/YIqdcdRk9
uHAsfs6p/9ovoQcXhr2f+71T/hJ6GID2T9WsDI4vehjAjgW8o28m+aCHAVzh
lBzsXeKNHgYwf43ptG07vdDDAOYl59mKz19EDwOotqqfnxjiiR4GUNau9ig0
zQM9DMCxylojododPQyg/lYVu7XPDT0M4P732btn89zQwwAqcvWjk2ddQA8D
eBhEC7BxOI8eBjCnRVQm43UOPQzAhZ82uuCpK3oYgFeZw4bo8rPoYQD/LXq2
1rrPBT0MIPxjUcWaZWfQwwAsLsl8uBjqjB4GYOU2lVnRdRI9DKCvfP2M6StO
oIcBjFEQGCVEHUMPA5hAbw+YoXwUPQyguCb1YPGOw+ghGX/lt5A92QfRwwBs
Yk2YqqMOoAcPtPTvXbDh7UcPHhQ7+e07/80RPXjwm5MnHZa6Ez14YOkWeCDS
3wE9ePDU4p6cv+N/6MGDafu3m4T4bUIPHpw0o3FTbNagBw88BGoNO/VWoAcP
PunNnjmubD568CT9wJTtn5XM0YMHYZ7Wa9qf/k2jPHgw9Wubu3fdVDxf4YHu
8ERjZ60FeF7EAzXaqvOfAlbg+8E88OqwnVJ2c42Q8uDBnnk01pPrm/D8hQeb
Hpbss5z3H54n8aD0rhsnaIYDvo/Lg6ZFcbZuZjvx/WrJ/DUtX3cJHPF8hgdl
pR0MaY19eN7Eg7+vDzYtd3bC95F5MGf0C4sDPw7g+8w8cG1OSm7ccgjPb3iQ
W50fHF10GM+j+DD/5hNaycyj1Hzk+bDEO9x0ReQxfB+YD7vFt2gTtE9Q50ka
fDgQNrLwsMtJPL/iw3l+9BFu8ynqvEyXD5s/71MZt+Q0vo/Ih6/cIK+o2DPU
/I34EOmdeHSxylk87+KD9dzQKz1JZ6l4jOVD0ZxClabdrvg+NR+qb961VdE7
R8XHgg9bfI0+7Mk+h+9n8yFxukCZdvQ8FS8rPmQr61n/MLyA7z/y4f1Pux7G
2wtU/BbzITXjz/ljJ93wPI0PMZNaiGC4OxVPOz6YVyp40d+64/vPfNjepZk0
77gHFd+tkt9bkzvsNd8T36fmw/Osj/q+2Z5UvB35kn5W9nvw/ot4vsiH6O0q
zf1aXlT8j0jmE1i4LDLZC/OJD3mrl+yL2OJNeZzlg9D8sdtPOR/MLz5ULTMv
933oQ3l48eGXyukg50W+mG98uPBnlrawzZd63/saH37/53989eVLmH98uNaf
1TV7/GXK4y4f+NZX8j2LLmM+8uHLMWc6y8KP8njIB4bfFP9LHn6Yn3wIt2s4
+6Lcj/KI48M9vYdOl4ZfwXzlQ4PH9t+sw1coj1Q+bBopCrJOv4L5y4f+dN2+
0XR/yiOLD7ez7t57tdEf8/lfPOboKkb6Ux7FfFCoKmjv++uP+c2HtwkFcRFz
rlIeVZL5SUV+k75yFfOdD5nHQ4fRq69SHp/5MP59YUOx8TXMfz7c6RTEzj98
jfJo50NlzgHmQeE1rAc+NB866mOjEkB5dPNB0aLw/ueVAVgfAtDfI1VpFhyA
9SGA5s1nn0z8EoD1IYA8y5jQbxOuUx4aAphX3DB1o/N1fP9eAK4Htn13e32d
8tAVAITvm7mDdgPrQwC3fsyMkLa7gfUhgBBnlXurgm9gfUh+v0Dh0bbmG1gf
ku/bOZqPHheI9SGAUYaHM58eDcT6EIDfSvus76mBWB8CsEr3fP5F7ibWhwCm
7bZUvLfoJtaHAD501I7R8r+J9SGAs/w/QfMqb2J9CEA4WTZ3ssEtrA8B7N/2
xKhh2y2sDwHc4UbrL3t0C+tDAAsPfxCc/H4L60MAB7YMC7efeBvrQzK+ShBL
4/htrA8BGKsf+3Ai5TbWhwCSopS2h0vdwfoQwHS1QoH/nDtYHwIYWO14HDzv
YH0IYMmX6HcxeXewPgRQuffqnQZaENaHAH79nTXtvU0Q1ocA8rU0dfyvBeH5
vgCmVAdcp1UEYX0IoP6nB2+Z7l2sDwEM86jTXrn+LtaHAKLXlNRyg+5ifQhg
3L3M2qiau1gfAshR2nxCmh+M9SEAR193Nc7WYKwPAXzdsaWn914w1ocAFn2x
jQirD8b6kOSPqfvzi4wQrA8BmK+ZURFmFoL1IYC5eY6NoTYhWB+SfDhTouZx
IATrQwBjeirOLL0SgvUhAOlpF3d2x4RgfQig3/XWX6+iEKwPye9Z7lwr1R6C
9SGA2Xl/k9Zp3MP6EMDS/WLrW2PvYX0IIFwhc5xwyT2sD0Moat58O2fPPeH/
rEurmA==
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        LineBox[CompressedData["
1:eJw123k8VF8UAHD7bszGMBgzqF+iRVKRuqdFlEraSyrtaVNKSbtoIVsI7UKI
NtlSzSAlEiplKSFZosi++8k7zT8+8zHevHu+97x77nuHYNO+pVslxMTE3CXF
xP7+DA/7+0ojAW7WejW3+SKDdX6ZHWOekYvP7+7UncgTpfE8G+1SX5AvpluK
w6I0RZHOMxQ+3xGRdJf1M997aIia7FKHP5FBOg/Ozi9I5Igmm/x9ZZFjz0WL
CvTVRO7s+1ZVR18SQ96VLba5bFFWx5jhb8gme2h+F9+Gs0TDBxs+4mtSf7qx
usGXKVr693B2OeTPlIqgilsMEXV+b4gYa7+Xylu6qPro3wPmkpxte4NeKdHx
fN+S9PiOmD4hTbT/7+k555OWCzy3/V7KeP7viJ/JncnvdiiJxEZeheS1SdbY
G5sVcTyFBGo2RHe7KIisq/5+QRFxa/v0ZusVeRxfEfm2PVU1N09O5J/5dwDv
ic+CjmkrVeRwvB9Is4HKmKMbZUUjw/n8gZgdlnxW9lwGx/+RyH76Mn/+aBmR
zt/T4RUT29W5r56FSotGDpdZTLwNZo9eyJYWbRt5fSIFs1MeG4RKYXw+kzOM
OxNu6kmJ/h6Nff8z0d7leEMhWRLjVUJevL54rnyxpKjz7+E6SkhLsvCh/y8J
jF8pUTZPNEwOkBDNHDlgGbG6JP/gu7kExrOMnMq+YpReLy7y+nt6nuVE90Bd
eF24uGjsSHy/kLHZzxo07cRF797+fX0harNKuUxFcdFI+Jy/kn7vrW4Xc8RE
I8NlVxC14k2NCy6IiUZOL7WCuPrYrOEtEhONHG7dNxIekDDmI0sMPSrJ5rca
viefDgmp8VSSB44hns5Lh4SUTyUJVFpROaF5UEiNr5KULQozPuI/KKS8qoiH
3LUd8lMGhdR4q0jg+Zt2Md8GhJRfFdlZWaHPuzQgpMZfTZ4q3BRMmzkgHDkd
v2oyu/KHyevWfiF1uGqym+l352Zcv3CE1+Q7SQi7kxe6tV84wuf5nZTeGyjx
0esXUjzfidu+zX6ra/qE1HysIbI669nld/uElH8Nka4dK+zY0yfMH4lfDUlS
mPrLe0qfkJoPP0iqa1zZGfE+ITV/f5Dyd4EnMt71Cqn58YPM3rLYaeKNXiEV
31oyOqbqXtq+XiE1X2pJxsPGx9ZzeoVUvGvJt6HOqbnqvUJq/tSR63MbRxm1
9Aip+NeRqN27PB3e9Aip+VRHLuj92bk4skdIedST+x3ulc2netCjnqS8vv/N
ZEMPetSTUVbmZsqkBz3qSfthV599/B70aCB1YXRzW8ke9GggvA1Jq2/XdQtH
wtfYQEq/3I6zz+8Wjgx3xk/inysbdPBJN3r8JOxAE+b3a93o8ZPQ92xJvOHV
jR6NZMUqa7+b+7vRo5HoDNGgwqEbPRrJFw25L8tsutGjicTfzmzuMetGjyay
6tSdI7kG3ejRRArYjd+E3G70+EUOFAk6Pyp1o8cvYtZc81tKrFtIXb9+EfEK
JQeb9i70+E1Iyn8TIhu60OM3OeQ1O16xsgs9fpOe5/3OJz53oUcz+R5Vtbun
oAs9mkmOmFSl25su9GgmTedKVg9kdaFHC4masfDxaWEXjqeFbGhiMaWfdaFP
C8l2m1TnmdaF42shbIkn9RKpXejVQio7r7LdU7pwvC1kZobUg1/D7ym/FjLx
7r5Za4f/nhr/HwJtc8JF6V3o+Ye0XTn2lj/8/VQ8/pC4LI8J7sPnR/n+IVpM
iw2FOV0Ynz8kFaZaCIbHR+XfH+J9htu091OXUHVkgK0kLGdi2dOKLszHVjLd
2zBVpr5LuH0kfq1Eu4x5cnlrl5C63raSy4lbnaMHuoTU9byVpFTs4gzJdwup
61cr+Zb1dIEjp1uoOBLfNuI++Htc4ahuIXV9biMysddMbE27hQ4j8W4jUveO
6FRbdgup610b2XfjudylVd3CByPxbyPXJhWsW+7ULSwZmU9tZL6NTrXFiW6h
+IhHOzl2eHW6zeV/86udBGYUOXnFdqNHO6FZL/nUKvo339pJ3VlNmyul3ejR
TqLv7TxztO3f/GsnC1ljo+/Q/uVTO7lkMXkl17AHPTrI/YTqhFrrf/nVQexD
BQsYO3rQo4PcVei1vXP+X751kMWL77hEx/WgRwcJYI0SG/WuBz06SJt6yDeD
th706CSDJlKRIo1e9Ogk51pZAR2zetGjk2R4bY8u3tWLHp1k/oqKuL1XetGj
k8TZiaYVvOxFj07St+lnrkx7L3p0Ec0VrLxRo/rQo4sk7p5ze8bqPvToIvpX
rr7ceKkPPbrI7D0++REv+9Cji2yqvXVBfbAPPbpIXqoUo8SsHz26SaRC29fu
w/3o0U2WryO1l1P70aObXLw0MSWrrx89usnPu02XI2cNoEc3eVOUHrL84gB6
dJNDV/cXtxUPoEc3caldcSFSfxA9ekiEYau5t+u/9aeHTOWatr7LG0SPHtKc
tmdXmP4QevSQyLSHdpzTQ+jRQ17mLD55pGoIPXrIb94l3W5dMRHl0UsKU+K+
rF0lhut1L7lmf1tWwldMRHn0Er1Ws2PKr8WwHuklHv3+529KiGO900ssyVmj
ryCO63svyQmY4fD7tLiI8ugjJuNLlwxmi2P90ke4NrYfpitLiCiPPnKkvSeq
dJUE1gN9xCtmQSMtWkJEefSRieYXbnG6JUSURx+57/TmP9Ph+oPy6Cd+abE1
92MksX7oJ6tV6n+/l5XCeqWfzNbZU9G5Swrro36iJaWfdKRYCuuxfnInu7BR
OFdaRHn0kybXMTEzn0pjfdNP6t8/13OZ8q+eGiBiDZ0LG9JksH4bIGN4CxIs
LGWxHhwg0Sz/CG6pLNZDA4SndrB/rqsc1qMDZFGsAStY+1+9N0Cm+xTtHyqQ
R49BMlifYRrqq4Aeg6T1cNLC0LWK6DFIzszd+3qzqRJ6DBKGcqBnAP9f/TlI
xtbmXW7XpqHHIAk2P/nw7gQV9BgiARrjcpSN6OgxRGZk71/FzqejxxB5xCmp
CDzGQI8hkgBq7DMWTPQYIt67H68yV2GhxxCJ6uxx9e5iYX0lBqFjb1SWd7Nx
PGIQ8Pux4VKOGtbPYtBoPWGM8mqOiFqPxYDl0/TKOUMdvcRgR9ov9wB7Ltan
YhC3cqFx/kQt9BODV0r+9LjFPBG1fovBwswNiQGb+egpBsdNa+uXlwqwHhSD
SD3JGbFheugrBk0THiXRno/C+IjBGNIXprJjDHqLgV5Betr9D4YYL3HYW3Dd
Wn7CRPQXh8HyQNelq0xEVH0gDlPsjx2xlJ2G80EclP3GX6InEaw/xSFXpc9O
cb4Vzg9xaM7SVxqsXCGi6glx+BY5rahyqhfOF3Eo/6/+U7quA1Dr8/DnV2kr
R/cvAGr+iMOiwJNaGSGzgKo/xEHjcBpbTmAO1HwSh3pw37KjYDJQHBIQKv3s
yVtbY6A8JGDmfZtRFfHjgPKQgHkqtS4nBw2Amm8ScA+68tJG/weUhwS4c+pe
LK3RB2r+SYCLz9OrHJoeUB4SoGOSUJl+XgDUfJQAuyu+eftn8YHykIBwK+34
xBU8oOanBHD8ItscXLWA8pCAYsOGj1afuEB5SIDBjguhtk4aQHlIQLMs++EH
A3WgPCTB6kyoQJ7GAcpDEu4Fr5zkyVADaj5LAsvJgdcwQRUoD0lwjFDqjNzK
BspDEmZLTffOfcACykMSXPm6qY2KLKA8JMHOZ+E7sSNMoDwkIcuwsHt5KwM9
JOFcn6P0YTcGekiCdni62zglBnpIwpIhY4M9sXT0kIRvqaOS7JbQ0UMKdC++
vsARo6OHFKy8xpEf76yCHlIAz94rnm6moYcUNMzPPz7pOA09pKBTyDHar05D
DykwSl2o4iNSRo/h3z+x+Pz7oDJ6SMHZdRJ8HVNl9JAC86v2U56KKaOHFKzX
/2+Vy2cl9JCCw5Oer2WmKaGHFOQ2fRIdiFJCDymIDOeoelxTQg9pkD1O7s69
oYQe0uD9LTMoL04JPaRhShlbn2QqoYc0bJ3re7CsRgk9pCHeO/T8L6YyekgD
PfXd44qFyugx/PcPrA4YXVZGD2lYN7T93b5aZfSQBvfxj6w2WNHQQxqSuta7
vU+moYc0sLwe+70yVUEPadjCNcrYnK2CHjLDXhaSZ0z+echAdea6B9q+dPSQ
gcgzKRL72+joIQMx44v9/Lcw0EMG3sdnWWdUM9BDBlLh9cEz+5joIQMnON/t
wpVY6CEDy6a/mzn6GQs9ZGCczfWbD06x0UMG1tc4GVk5qKKHDKjlPGHGrlBD
DxkYqzfPac9eDnrIQGHChvELEv7lhyz8CD4dtFeDix6ykDRPvlbymSZ6yIJ9
71n9ulva6CELo1g2vU8/66CHLCjMDwzOMheghyxMkY3dfjtPFz1kYfvu57ze
x/roIQuSShc4JbT/0EMWKrLfVCsrj0UPWaj/7t+p2zUOPWRh+qbD3ieijNFD
FjIWxrbmupmihxw0Foz1rtw3HT3koPbT+CnR/bPRQw7aywLXO71ZjB5ywON7
tM6YugU95MD9mjGLt8YZ10s5CN68UlNi7FJcP+TA//lM4caxlrh+ysFMVT/7
mW0zcP2QA6MP5Qfo06fieioH4fNraw9KmeD6IQfJlR4OlYKJuH7Iwbi7Bgft
mEa4fsjBCXKsWq9mDK4f8pB8KPTBqm2jcf2Qh4E97bJ9W/Vx/ZWHmEP6XyQz
dXH9kAcxLS8J1S0CXI/lIdzP3+C0BR/XD3nQ3Wx2tPkkD9cPefh5RfDR5K0W
rh/yUDu3Q9/AThPv38iD9rYTS1nSXKw/5KGJ6bZ/RaU63j+Sh2vX9aN+fOFg
PSIP1u++zvjZoYbruQKELqoLPvCfGq7nCuCSIjc0e68qrucKMCszQvH+azbW
KwrQsN3a4bAxG9dzBfDJdVj9PJaFHgqwVE27vm48Cz0UwMZshuxVIRM9FKD/
ewMvfi0TPRRAOfSSr8YQAz0UoGPXhS+S8Qz0UADnTLeJMRsZ6KEAqy9qF9hr
MdBDAdbtYzuer6CjhyLMY1mVxUTT0UMRgmsmVM07+K8eUoSgJstr3fPo6KEI
qWlaRet5/+ojRbgdcv/CvHYV9FAEJn3O7d+JKuihCAlxJ2eOcldBD0X4umSU
6pb5KuihCBbMMN1xPBX0UASNTOtncj009FCE+TeNkjxKaeihCL6/H/mNE9LQ
QwkWbZjwOCSWhh5K0CcZHrQ4lIYeSrBtIKyi6iINPZSAu9tpT8kpGnoogdVL
E7NENxp6KMG8j5WMnwdp6KEErrcaDBv209BDCWZ5rXKlOdPQQwmmmF98Er2X
hh5KYGQ1a/XP3TT0UILYkL2avTv/1Z9KsHDec4fyLTT0UIIinz7bg+to6KEM
Ohfnip23paGHMqzzPrn1sQUNPZRBeeyU0C26NPRQhrlzjx+tGlRGD2VYSdcx
mF6ojB7KsKt0TYJdkDJ6KIOfSdC5D9bK6KEMxY3L3kGjEnooQ5ZY0vM/R5TQ
QxmCb8yJFzQroocysL0mOw4tUEQPZZBfN/5R1gUF9KCBxtFTkgUx/+p3GgTZ
farOj5JDDxrEFQ91fj8hix40cDPKSymfJIMeNHi5MrV6VYYUetCgWPBxq4Sh
JHrQwMFUwiZxvzh60GBOWLM2y/jf/UoahPd78Sut+nB/TINJ5h8Wsk3+3X+h
wU61X4OKYm24X6bBoiMt1mvcf+F+kwZmVqLoTV01uH9WgaPb5X56/leK+08V
COJ+KJ70NAP30ypwsSpx9PP6p4TyUAFzi2RdnnMxoTxUoDM1ax7Nv4pQHiqQ
Awa8ts91hPJQgcZ8ZZ30c78I5aECy9LfiLMX/yGUhwosEXr4sb3bCOWhAhnz
38gyjncQykMFlk91Ohb4XxehPFTAnSutoOHXTSgPOhTERHm+TO0h1OWIDtL0
TUnycb2Eun9GhwcfGn0P7egj1Pjo4Jky3/5ETx+hvOhA26IW6Lipn1D1PR18
7YvuKcX0E2q/QocfaSHttIJ+HD8dsgZm7Q8s7yeUJx2cryzgrC3qJ9R6Sgcd
+tKSrMR+Qu1n6LD7+ijrfM9+Qt3PpgPDJ7ZWY0E/obzpULdu1dJeiX6MFx0W
6X8qdXncR6j9Dh30pwQqWq/tIyPhC6PD2vsfxfv7egk1H+jgkPl91rfQXown
HaTs3dSYk3oJtR+iQ5XlrbXeOT2Eut9Lh1NL6x5rO/SQkenylg7LPmZPO9bS
jfEejl/3m5szPboJdX+UDkwfu4oa1W5C3Q6lw3zd0C1lMV2Euv1Dh5Jbhr+O
WHShBwOSSq/9USjqRA8GHPj+JD9/Wyd6MOCp+rPwtoEOMnJ6PAYolPvkRYZ0
oAcD8p4sDRA37kAPBrh3iNH18tvRgwERQ6IdWrvaychwrRgwgfHlZp9CO3ow
IMqoe1NufBt6MMDVsybRd0kbegzX9dp33W06W9GDAbssJeTFb7SiBwPmLbA4
nmDVih4MiAkIMljU9gc9GFA058S3slt/0IMBy5c6my5Z8gc9hs/vaXlGlPi/
+c2AL+sjFn140oIew+P3MRsq2NmCHsOf33/0ZCC/hVD5ywDDj4PGuo+b0YMB
CdOuR3mMbkYPBiR2NSub3viNHgyQn767UaDxGz0YsHaV5j3TK7/QgwmVmfEZ
9uq/0IMJbRmszJPXmtCDCTdmL3G+pNeEHkwwe9BU6JzQiB5MeJN+11TNvBE9
mDBB/pGV05uf6MGEyGNFKmvtf6IHE06qv+1/39yAHkxwSTarz/RqQA8mLOlX
56rzG9CDCbu4c20y0uvRgwmSel3RCWvq0YMJEh3eeW97/l1PmLAxyjuXdq0O
PZjwrm3imC1Qhx5MaPF1KXteW4seTJhx+6GVsl8tejDB0EbCcq5ZLXowQWbK
CvaKHz/Qgwl6C+ZvmnT5B3owgZdaP6dg9g/0YIJd48zJOu016MGE4pDPDLW7
NejBhKQyI60Y+xr0YMKhgwp/3jBq0IMF16UaLzi/+Y4eLNiXsMws4Mx39GCB
+E3jGMGM7+jBgiJ/iw+cnmr0YIHm3Y1yTsnV6MGCV4XGNbRD1ejBgocLnWwH
JlejBwt6Hxw6ZtRZhR4siDsl/+NyahV6sCDW7K2V4bEq9GCB4xrF6J9QhR4s
WPX71KxcmSr0YIFf85jwzPxK9GBBuc/o3W+DK9GDBd/PpyVUrq9EDxbQQ+Zc
6h5TiR4sMDFLr+DWf0MPFiif6ik1PvUNPVjA+rzojgH3G3qwwMFqj0lnUgV6
sKDlln2V97IK9GABe934Dd9av6IHC2JUm5J/XP6KHizw/nXOKmjKV/Rgga1s
d0Zl2Rf0YINo57bRGae+oAcbjFzdMwzHfEEPNpycmGHAKSpHDzas8OfNOOpe
jh5sOMB24i38rxw92ODwkWly9mMZerBh9uJvfK5HGXqw4b1xRp60SRl6sGHJ
nufLSE0perDh0Ks6pjCkFD3Y8GjB/qvHF5SiBxt2/8xJchkqQQ82fAvKXx+e
VIIebCibwHj1c3cJerBB563hwvWjStCDDZbuvNO/Kz6jBxt2GGfrBod9Rg82
dApWaS5c8Rk92EBT7DipzPyMHmx4Vj/X70PBJ/Rgw5VL3Iehvp/Qgw33I4yc
Vy3+hB5saA4uPqOg8gk92BAoXimMLyxGDzZM0F6va3a5GD1UgZnn/TpuZTF6
DO+Ly57+6ucWo4cqRGvObxtb+RE9VOHbt5srJkZ/RA9VYF+2eCi35yN6DH9e
MTP9weSP6KEKqrOYiwQDH9BDFSaoOi9f8+oDeqhCVFXMl2X+H9BDFfyPWyoo
239AD1VwP5DJPT36A3qoQgG3YHN863v0UIWqbZeXegvfo4cq3JHtd+Jeeo8e
qnA0Q8lqpf179FCFffemhUwf+x49VOE/XZHW654i9FCFvVPZiR1vitBDFV7s
JJYvw4vQQxUe7l/2fsLuIvRQhdHt5btMZxahhypcbVxh+p5ehB6q4B1+b7Nk
TSF6qMKDr08sXqUUosfw3yemq6n7FKKHGmwqlFrdubEQPdTghc461/VTCtFD
DYwlojoXKRWihxpobfpScja7AD3UYNJMZtsBlwL0UIMT++ZfddQtQA81aE//
ZLPw/Tv0UIMEDeuw8R7v0EMNXnbHG0uZvkMPNRjlWFOeU5ePHmqwNr7F9cjV
fPRQA8N7S3poS/LRQw0WSK13Pi+djx5qEHz94VBl+lv0UIOj1V6VbJe36KEG
i59NcuQbvkUPNehneNcMfc9DDzUwjXGsenA9Dz3UwMFsoMpodR56qEHR7Sse
Lqw89FCD9X3fDp0qyEUPNSj1OnV0iU8ueqjBYYjZUjk/Fz3UIFw8VH2cXC56
qEE3zcTb5PUb9OCAWldgRovXG/TggEHkjUJHqzfowYGes5FfPOTeoAcHJj/p
Ul+em4MeHCCS/q8LfHLQgwPHC+OntdvmoAcHpgYczX3BykEPDmzseVpvVPIa
PTgQFrtPyeL6a/TggMSSc+kNm16jBwesR186b2LwGj048CZtLZPT8go9OGDV
mCcZmPIKPTggyzrEijj5Cj044DbNXtLS+hV6cGD0wvu3jjBeoQcHPi/zzDIv
z0YPDhw8cm3xhahs9OCAZR17wibnbPQY/v3hKeuypmejBwccpE0+x8lmowcH
glwb49Q+vkQPDnSuTm6Uuv0SPYbHQx+T4rL3JXpwoNTzi4mjxUv0UIegxbMD
8hReooc6fJy+XfZRaRZ6qMMZm1efVGKz0EMd2n+pWdceyUIPdUgJ1o6fND8L
PdThwPnj9m0aWeihDntqvZNHN2aihzrYVuqNynuWiR7qEEs/pvbNNxM91MGm
tV/M0TETPdTBb6f6JtvJmeihDsw1ui9iZDPRQx26zMbe2lWegR7qYPCwOCzk
QQZ6qMMtpsWcMWcz0EN9eD+Yaa6zJgM91OGsbp/+0fEZ6KEOSddOxk+VykAP
dXD9/eH0yjIReqjD7UNz7YsfitBDHVZKv25/fE6EHuoQsOmLyu/1IvRQh2Nn
Drh4ThGhhzpknH3deJgmItR+Vh1ob8KDzucL0UMDVJK18t6fEKKHBiz4qjfp
7UQhemgAY7nnxQPfX6CHBrCbYm5khbxADw0o0F81+/mCF+ihAaVLzi91GHqO
HhrQXTc56faT5+ihAXv7Rq857/QcPTTA/fVbUxXBc/TQgIRVSjaTS56hhwbU
TVW/3eH3DD00oGKspbWd9TP00AD7isrVluLP0EMDkkPk2wqepqPH8HjyvGY2
H0xHD43h61+E0+0J6eihAUxfqfs1P5+ihwZsmegzLyX6KXpogNW3cW6czU/R
QwOithYESPKfoocGeL0d9d3taxp6aIBG9eVXR66moYcGnD0jf21wTRp6aED+
je9v5DXS0EMDUnrfPgstSUUPLmy6ebMuNjQVPbig0D8va/qaVPTggs2jiHcL
uanowYW3Ek6+5eUp6MEF358ql2qvp6AHF3ze3F27e2MKenBhweNcn116KejB
hYj5x19U1yajBxdKpqn5F8YlowcX2saPumuyLxk9uHB319r7CpOT0YMLzA97
VyzvSUIPLmidVbJTESahBxdqW1LWmnsmoQcXprikTfxok4Qe3OH9vGxIOTMJ
Pbhw58TEpbZlT9CDC8l6VsbjI56gBxcOnXwredjpCXpw4fCFazfGmDxBDy50
WJaVzepPRA8uHDnyJTgjOxE9uLDsGfdRtF8ienChVEKT2bImET244OqyIeKa
fiJ6aILvveW295ofo4cmnLIHBc30x+ihCaowMeen12P00ATpgw2nNZY9Rg9N
mKZRYhKt8xg9NKF95dBXv6ZH6KEJgnsNHsVpj9BDE875hBm5nnuEHpqgte5o
tfOKR+ihCSmRdokv9R6hhya8iJz40Ln1IXpogrXetl8uGQ/RY/j7fZzP5Ps/
RA9NEC5ruXBs40P00ASxG+GCUxMfoocmFI01cvos9hA9NGGzVBpN8s4D9NCE
ddkRpG/uA/TQhA2l+k+D6+6jh+bw/rT3U+HF++ihCfcs97fHjb+PHprg8HyF
q+6HBPTQhLxnJdmmRxLQQxN6+47afddOQA9NqMro9DF4GY8eWlDlOPaPzK54
9NCCeoFkvxszHj20QPncjomnn95DDy3IlB2jprn5HnpowRFeldk8pXvooQXa
L/4YiSfHoYcWOOpt9lywMQ49tCBc4vNXvmIcemjBAO1Q8ZnkWPTQAk55icq+
TbHooQWdymKmNbRY9NACxq9pfyrTY9BDC9rNGB2bd8aghxa8X2/ZsYsTgx7D
738+iOvKvoseWjB6ndl76UN30UMLmk1zjIL176KHFjStNz4Z+TEaPbQAcscE
TvKMRg8tmLRt0qSZU6LRQws+212e8KouCj20YOaKOevfhEWhhxb0XKsInrcw
Cj204EPKlUcWQ5HoMRyP9wb+cY8j0UMbaKZ5LL9tkeihDdN7dHQbuJHooQ2x
4uMiUwruoMfw7w1svHrO3kEPbZgZz01NML+DHtoQketq9KElAj20QSJiZ+mO
uxHooQ0JFvzUPesj0EMb2J8rXlaqRqCHNmxd3TEoyr+NHtrwYzBxh7LXbfTQ
Bp8ZG2WzZ95Gj+HP5xl8r+26hR7a0FOtI3vg0S300IbHD0af3rrrFnpow5+f
TY6iUbfQQxum2WS5SWbcRA9tuOi+fInd1JvooQ3NYsZuO+7fQA9tUGqaZWg1
+gZ6aEPn/YiIxhvX0UMbFNb58perX0cPbSg2WdR4IvAaemhD9RndxU7K19Bj
+HxyzcPYF66iBw/Om4cLjklfRQ8evN2jOOvmmXD04EGLK23lMbFw9ODB1ok5
WYyTYejBg5CPf/44DIaiBw/aSnIWbjgRih48OK0yNJc9dAU9eCAve8/W/dQV
9ODB04fTagMlrqAHD7xhrdcazxD04EH7kp5H+XIh6MGDeBjT/MsnGD14sPkd
KyeVEYwePMhobs81uhKEHjzYUSlx0Vo7CD140LFn61WFyMvowYP3rv+F7Te8
jB7Dx480EBxLDEQPHsxeo1o8xiIQPXiw84PtWtfsAPTgQaDHrzWbbQPQgwcV
oVGnfpf6owcP+tKyT6ht9UcPHjQ22dCfVPmhBw9cRWYx+3p90UMHipLrzB3Y
vuihA63GKXOPTriEHjqQfzLD+qWND3rowCTPjMJpO73RY/h99sDu4nMX0UMH
WtImPbly9wJ66ECHx/E5x3POo4cO1Pye98Lj5zn00IHmnPHvYpTPoYcOTPfo
0v1p7IUeOpBidOCA5SpP9NCBMYlOR1KPn0UPHeAcCOqEKA/00IF4pcNPvuSf
QQ8dkAuyP3mh6zR66EBUm9lYS93T6KEDPhHRl5QXn0IPHTCZc1olo+MEeugA
cxfpPmx3HD10oK3M8+70B+7ooQMZuYM9sipH0UMHzK9UfCpxPoIeOrDRNnNC
3EdX9NABnQxfsSPmh9BDB0702trOjHBBDz5sX6Jh1KN4gBqPNB8CC348jDzs
jD58WOTYKnE0dw8ZeZ6kwgc5xzMhx2KdCPX8ig/6NXsvzvfZTj2f0eADbfu5
DaUHtuDzEj58lJkRq+/gSI1fjw+ffYq41iHr0JMPrvqjzt9yW0nFYzx/eL9z
YPzcLUvQlw/X3jldnB8/l4rPND5M29J2tdDCGL2Hv//y2Jan8ppUP/psPtx/
vuHQpqiZ2P/Ih+5492z+FBvq+dbC4fEsOHOt0HMZ9l/y4cGrxlfRO9dQ/dmr
+LDz0PUZt+ZtwP5nPvD/9Gtv9d1E9Xs78iHYMPO3uutW7Kfmw46NfJUDa3dQ
/eO7+OBpeOGX6/Rd2G/Jh15npYZxGnup52eHhuNnnBXzzs0Z+z350OpUm7j1
x36qn/oUH1ZL/R6/wdYF+8f5EOdw2vBFykGqP/siH5KLZZ548lyxH50PF6zT
8lI9DlP93kF8SJr4fO/auiNCav7x4bSXaeCe+Uep53M3+LDNYbV+R6w7Pg/k
wz1DD6V2ueNUf2oMH5qLFxvu2XYC+7354O5yZ+3mzJNUf3siH6y//0je7XsK
+8f5cG7GS/UG89NUv/zz4fPxZ0yJqT2N/x/Ah669or33As5QHq/5sPBguE77
dA983sgH7ob5ER4/PCiPouHzVdm4yN73LPbL86HRcfPBY1M8KY8vfJBvfb+9
/qsn9t8Pz4dnxodunfWiPGr5kHCbVhc19hz28w/PryIl6d6Cc5RHCx+0WU2s
GwfP4/NMPsR2+q+4rH6B8ujlQ1ODknx5+gXsbxfAr4nRTq7rL1Ie0gJ4//Jb
4jYxb+yXF8AazmnNhNvelIeKACa8uF68YLYP9t8LwFjqOmtWtQ/loSEA2/Wz
pAJOX8LnpQIYKHjwYTrfl/LQE8BZo8P3Zr/wxX5hAaycf+VxtL0f5TFeAPKs
88o7u/3w/w0EwLXm77Nc4E95TBNAQTUvQibUH/9/QQBHX8+9f+SHP+aHAMTi
KvnXJgVgfghg51qa1/6TAZgfAkhSfLqjJy8A80MA0wLuLJ2sHoj5IQCXy45v
dbcEYn4IIDp5i0P2g0DMDwFIP+v11uoLxPwQQGiQ3dcx8y5jfgigZNfR4p/+
lzE/BJAct7trU/llzA8BvGuSyw4YFYT5IYDAFk3h4X1BmB8C2ODmuFU1LQjz
QwD5485N2SURjPkhgNLtEx662QRjfgigcqht8aygYMyP4c8r7fTN/BKM/c8C
4FzTaRjQD8H8GH7vGFPStjsE80MAlg4hxZFPQjA/BDD5+OlVjP4QzA8B/Jgo
X2w25wrmhwB+93zK4l28gvkhgGctt0JFhVcwP4bng6XRax1OKOaHAA48sc20
cAjF/BCATU9HH+dOKObHcDwm8X88qg/F/BDAY8v6XwrjwzA/BPDd1MNTzyUM
80MAHofncPtTwjA/BGBvflUjuD8M80MAngm8lt8QjvkhgDsWXvIKnuGYHwKI
yn5YWJsTjvkhAO+cqAeeSlcxPwSw3/+KSp3tVcwPXViy4sdqxctXhf8DVciz
Fw==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t\"", TraditionalForm], 
       FormBox["\"d\[Rho]/\[Rho]\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Plot of d\[Rho]/\[Rho] for Different C1 and C2 Values\"", 
       TraditionalForm], 
     PlotRange -> {{0, 9.}, {-711.2900220089425, 161.72631192789498`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"C1=0.5, C2=0.5\"", "\"C1=1, C2=1\"", "\"C1=2, C2=2\"", 
       "\"C1=4, C2=4\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9430733105779085`*^9, 3.9430733750964785`*^9, {3.9430734869024096`*^9, 
   3.9430735017773113`*^9}, {3.94307359009624*^9, 3.943073610061466*^9}, {
   3.9430736721259813`*^9, 3.943073735695031*^9}, {3.9460329285031548`*^9, 
   3.946032965241041*^9}, 3.9460333434318857`*^9, 3.9460333994013386`*^9},
 CellLabel->"Out[90]=",ExpressionUUID->"3c378b6e-68ca-4243-bd53-8b43302f7f88"]
}, Open  ]]
},
WindowSize->{1141.2, 573.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7456f344-f23f-4c8c-b7b2-7b5ffd4db235"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 12271, 344, 942, "Input",ExpressionUUID->"3fd7a05b-9eda-43e2-9419-26510b21d3c5"],
Cell[12854, 368, 1363, 32, 22, "Print",ExpressionUUID->"86f6bbd6-b352-4da0-8e15-2879fef0a915"],
Cell[14220, 402, 25991, 512, 264, "Output",ExpressionUUID->"d060bb94-9375-4a11-9c14-772dcd0b9f04"],
Cell[40214, 916, 64607, 1137, 307, "Output",ExpressionUUID->"3c378b6e-68ca-4243-bd53-8b43302f7f88"]
}, Open  ]]
}
]
*)

